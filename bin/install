#!/usr/bin/env bash

set -euo pipefail
shopt -s inherit_errexit 2>/dev/null || true

[[ -z ${ASDF_INSTALL_TYPE+x} ]] && echo "ASDF_INSTALL_TYPE is required" && exit 1
[[ -z ${ASDF_INSTALL_VERSION+x} ]] && echo "ASDF_INSTALL_VERSION is required" && exit 1
[[ -z ${ASDF_INSTALL_PATH+x} ]] && echo "ASDF_INSTALL_PATH is required" && exit 1

function gh_curl() {
	if [[ -n ${GITHUB_API_TOKEN:-} ]]; then
		curl -fsS -H "Authorization: token ${GITHUB_API_TOKEN}" "$@"
	else
		curl -fsS "$@"
	fi
}

function install() {
	local install_type=$1
	[[ ${install_type} != "version" ]] && echo "install type, ${install_type}, is not supported" && exit 1

	local version=$2
	local install_path=$3

	local bin_install_path="${install_path}/bin"

	local platform
	platform=$(uname -s | tr '[:upper:]' '[:lower:]')

	local arch
	arch=$(uname -m)
	case "${arch}" in
	i?86) arch=386 ;;
	x86_64) arch=amd64 ;;
	aarch64) arch=arm64 ;;
	esac

	local download_url

	if [[ -n ${GITHUB_API_TOKEN:-} ]]; then
		local asset_url
		asset_url="https://api.github.com/repos/tmccombs/hcl2json/releases/tags/v${version}"
		download_url=$(gh_curl -H "Accept: application/vnd.github.v3.raw" "${asset_url}" | jq -r ".assets | map(select(.name == \"hcl2json_${platform}_${arch}\"))[0].url")
		if [[ ${download_url} == null ]]; then
			echo "Package hcl2json_${platform}_${arch} not found in a release."
			exit 1
		fi
	else
		download_url="https://github.com/tmccombs/hcl2json/releases/download/v${version}/hcl2json_${platform}_${arch}"
	fi

	echo "Downloading hcl2json from ${download_url}"

	mkdir -p "${bin_install_path}"

	pushd "${bin_install_path}" >/dev/null

	gh_curl -H "Accept: application/octet-stream" -L -o "${bin_install_path}/hcl2json" "${download_url}"

	chmod +x "${bin_install_path}/hcl2json"

	popd >/dev/null
}

install "${ASDF_INSTALL_TYPE}" "${ASDF_INSTALL_VERSION}" "${ASDF_INSTALL_PATH}"
